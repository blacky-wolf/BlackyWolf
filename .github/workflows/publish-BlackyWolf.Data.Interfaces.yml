# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "principis" branch
  push:
    branches: [ "principis" ]
    paths: [ ".NET/BlackyWolf.Data.Interfaces/**" ]
    tags: [ "v*.*.*" ]
  pull_request:
    types: [ closed ]
    branches: [ "principis" ]
    paths: [ ".NET/BlackyWolf.Data.Interfaces/**" ]
    tags: [ "v*.*.*" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Setup .NET
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: '6.x.x'
        
#       - name: Install dependencies
#         run: dotnet restore
      
      # Build project
      - name: Build project
        run: dotnet build --source .NET/BlackyWolf.Data.Interfaces/BlackyWolf.Data.Interfaces --configuration Release
      
      # Run tests
      - name: Run tests
        run: dotnet test BlackyWolf.Data.Interfaces
      
      # Push to NuGet
      - name: Publish the package to nuget.org
        run: dotnet nuget push .NET/BlackyWolf.Data.Interfaces/**/*/bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_AUTH_TOKEN }}
